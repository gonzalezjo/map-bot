-- Generated by some MoonScript I wrote. Sorry.

do
  do
    local _with_0 = table
    local sanitized
    sanitized = function(v)
      local _exp_0 = type(v)
      if 'string' == _exp_0 then
        return string.format('%q', v)
      elseif 'function' == _exp_0 then
        return 'assert(loadstring(' .. tostring(sanitized(string.dump(v))) .. '))()'
      else
        return tostring(v)
      end
    end
    _with_0.load = function(s)
      return (assert(loadstring('return ' .. tostring(s))))()
    end
    _with_0.dump = function(t, indentation)
      if indentation == nil then
        indentation = 4
      end
      local s = { }
      local size = 1
      local put
      put = function(...)
        for i = 1, select('#', ...) do
          s[size], size = (select(i, ...)), size + 1
        end
      end
      put('{', '\n')
      for k, v in pairs(t) do
        put((' '):rep(indentation), '[' .. tostring(sanitized(k)) .. '] = ')
        if type(v) == 'table' then
          put(_with_0.dump(v, indentation + 4))
        else
          put(sanitized(v))
        end
        put(',\n')
      end
      put((' '):rep(indentation - 4), '}')
      return table.concat(s)
    end
    return _with_0
  end
end
